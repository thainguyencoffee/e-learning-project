openapi: "3.1.0"
info:
  title: "e_learning_project API"
  description: "e_learning_project API"
  version: "1.0.0"
servers:
  - url: "https://e_learning_project"
paths:
  /orders:
    post:
      summary: "POST orders"
      operationId: "createOrder"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderRequestDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Order"
    get:
      summary: "GET orders"
      operationId: "myOrders"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Order"
  /orders/{id}:
    get:
      summary: "GET orders/{id}"
      operationId: "myOrderById"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Order"
  /me:
    get:
      summary: "GET me"
      operationId: "getMe"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserLoginInfo"
  /users/count:
    get:
      summary: "GET users/count"
      operationId: "countUsersWithParams"
      parameters:
        - name: "lastName"
          in: "query"
          required: false
          schema:
            type: "string"
        - name: "firstName"
          in: "query"
          required: false
          schema:
            type: "string"
        - name: "email"
          in: "query"
          required: false
          schema:
            type: "string"
        - name: "username"
          in: "query"
          required: false
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "integer"
                format: "int32"
  /users/count/search:
    get:
      summary: "GET users/count/search"
      operationId: "countUsersWithSearch"
      parameters:
        - name: "search"
          in: "query"
          required: false
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "integer"
                format: "int32"
  /users/search:
    get:
      summary: "GET users/search"
      operationId: "searchUsersWithSearch"
      parameters:
        - name: "username"
          in: "query"
          required: true
          schema:
            type: "string"
        - name: "exact"
          in: "query"
          required: false
          schema:
            type: "boolean"
            default: "false"
        - name: "role"
          in: "query"
          required: false
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/UserInfo"
  /upload:
    post:
      summary: "POST upload"
      operationId: "uploadSingle"
      parameters:
        - name: "private"
          in: "query"
          required: false
          schema:
            type: "boolean"
            default: "false"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: "object"
              required:
                - "file"
              properties:
                file:
                  type: "string"
                  format: "binary"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UploadResponse"
  /upload/delete:
    delete:
      summary: "DELETE upload/delete"
      operationId: "deleteAll"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UploadDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /published-courses:
    get:
      summary: "GET published-courses"
      operationId: "getAllPublishedCourses"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PublishedCourseDTO"
  /published-courses/{courseId}:
    get:
      summary: "GET published-courses/{courseId}"
      operationId: "getPublishedCourseById"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PublishedCourseDTO"
  /published-courses/search:
    get:
      summary: "GET published-courses/search"
      operationId: "searchPublishedCourse"
      parameters:
        - name: "query"
          in: "query"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PublishedCourseDTO"
  /courses/{courseId}/posts/{postId}:
    put:
      summary: "PUT courses/{courseId}/posts/{postId}"
      operationId: "updatePost"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "postId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CoursePostDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Void"
    delete:
      summary: "DELETE courses/{courseId}/posts/{postId}"
      operationId: "deletePost"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "postId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "force"
          in: "query"
          required: false
          schema:
            type: "boolean"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Void"
    get:
      summary: "GET courses/{courseId}/posts/{postId}"
      operationId: "getPost"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "postId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Post"
  /courses/{courseId}/posts/{postId}/comments/{commentId}:
    put:
      summary: "PUT courses/{courseId}/posts/{postId}/comments/{commentId}"
      operationId: "updateComment"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "postId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "commentId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommentDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Void"
    delete:
      summary: "DELETE courses/{courseId}/posts/{postId}/comments/{commentId}"
      operationId: "deleteComment"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "postId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "commentId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Void"
  /courses/{courseId}/posts:
    post:
      summary: "POST courses/{courseId}/posts"
      operationId: "createPost"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CoursePostDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "integer"
                format: "int64"
    get:
      summary: "GET courses/{courseId}/posts"
      operationId: "getAllPosts"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Post"
  /courses/{courseId}/posts/{postId}/restore:
    post:
      summary: "POST courses/{courseId}/posts/{postId}/restore"
      operationId: "restorePost"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "postId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Void"
  /courses/{courseId}/posts/{postId}/comments:
    post:
      summary: "POST courses/{courseId}/posts/{postId}/comments"
      operationId: "addComment"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "postId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommentDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "integer"
                format: "int64"
    get:
      summary: "GET courses/{courseId}/posts/{postId}/comments"
      operationId: "getComments"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "postId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Comment"
  /courses/{courseId}/posts/{postId}/emotions:
    post:
      summary: "POST courses/{courseId}/posts/{postId}/emotions"
      operationId: "addEmotion"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "postId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "integer"
                format: "int64"
  /courses/{courseId}/posts/trash:
    get:
      summary: "GET courses/{courseId}/posts/trash"
      operationId: "getTrashedPost"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PostInTrashDTO"
  /courses/{courseId}/sections/{sectionId}/quizzes/{quizId}:
    put:
      summary: "PUT courses/{courseId}/sections/{sectionId}/quizzes/{quizId}"
      operationId: "updateQuiz"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "sectionId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "quizId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuizUpdateDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Void"
    delete:
      summary: "DELETE courses/{courseId}/sections/{sectionId}/quizzes/{quizId}"
      operationId: "deleteQuiz"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "sectionId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "quizId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "force"
          in: "query"
          required: false
          schema:
            type: "boolean"
            default: "false"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Void"
    get:
      summary: "GET courses/{courseId}/sections/{sectionId}/quizzes/{quizId}"
      operationId: "getQuiz"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "sectionId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "quizId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Quiz"
  /courses/{courseId}/sections/{sectionId}/quizzes/{quizId}/questions/{questionId}:
    put:
      summary: "PUT courses/{courseId}/sections/{sectionId}/quizzes/{quizId}/questions/{questionId}"
      operationId: "updateQuestion"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "sectionId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "quizId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "questionId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuestionDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Void"
    delete:
      summary: "DELETE courses/{courseId}/sections/{sectionId}/quizzes/{quizId}/questions/{questionId}"
      operationId: "deleteQuestion"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "sectionId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "quizId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "questionId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Void"
  /courses/{courseId}/sections/{sectionId}/quizzes:
    post:
      summary: "POST courses/{courseId}/sections/{sectionId}/quizzes"
      operationId: "addQuiz"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "sectionId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuizDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "integer"
                format: "int64"
    get:
      summary: "GET courses/{courseId}/sections/{sectionId}/quizzes"
      operationId: "getAllQuizzes"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "sectionId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Quiz"
  /courses/{courseId}/sections/{sectionId}/quizzes/{quizId}/restore:
    post:
      summary: "POST courses/{courseId}/sections/{sectionId}/quizzes/{quizId}/restore"
      operationId: "restoreQuiz"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "sectionId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "quizId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Void"
  /courses/{courseId}/sections/{sectionId}/quizzes/{quizId}/questions:
    post:
      summary: "POST courses/{courseId}/sections/{sectionId}/quizzes/{quizId}/questions"
      operationId: "addQuestion"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "sectionId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "quizId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuestionDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "integer"
                format: "int64"
  /courses/{courseId}/sections/{sectionId}/quizzes/trash:
    get:
      summary: "GET courses/{courseId}/sections/{sectionId}/quizzes/trash"
      operationId: "getDeletedQuizzes"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "sectionId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/QuizInTrashDTO"
  /teachers:
    get:
      summary: "GET teachers"
      operationId: "getTeachers"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TeacherDTO"
  /teachers/{teacher}:
    get:
      summary: "GET teachers/{teacher}"
      operationId: "getTeacherDetail"
      parameters:
        - name: "teacher"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "year"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TeacherDetailDTO"
  /courses/{courseId}:
    put:
      summary: "PUT courses/{courseId}"
      operationId: "updateCourse"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CourseUpdateDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Void"
    delete:
      summary: "DELETE courses/{courseId}"
      operationId: "deleteCourse"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "force"
          in: "query"
          required: false
          schema:
            type: "boolean"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Void"
    get:
      summary: "GET courses/{courseId}"
      operationId: "getCourseById"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Course"
  /courses/{courseId}/requests/{requestId}/approve:
    put:
      summary: "PUT courses/{courseId}/requests/{requestId}/approve"
      operationId: "approvePublish"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "requestId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CourseRequestApproveDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Course"
  /courses/{courseId}/requests/{requestId}/reject:
    put:
      summary: "PUT courses/{courseId}/requests/{requestId}/reject"
      operationId: "rejectPublish"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "requestId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CourseRequestRejectDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Course"
  /courses/{courseId}/update-price:
    put:
      summary: "PUT courses/{courseId}/update-price"
      operationId: "changePrice"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePriceDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Course"
  /courses/{courseId}/assign-teacher:
    put:
      summary: "PUT courses/{courseId}/assign-teacher"
      operationId: "assignTeacher"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssignTeacherDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Void"
  /courses/{courseId}/sections/{sectionId}:
    put:
      summary: "PUT courses/{courseId}/sections/{sectionId}"
      operationId: "updateSectionInfo"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "sectionId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateSectionDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Void"
    delete:
      summary: "DELETE courses/{courseId}/sections/{sectionId}"
      operationId: "deleteSection"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "sectionId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Void"
  /courses/{courseId}/sections/{sectionId}/lessons/{lessonId}:
    put:
      summary: "PUT courses/{courseId}/sections/{sectionId}/lessons/{lessonId}"
      operationId: "updateLesson"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "sectionId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "lessonId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LessonDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Void"
    delete:
      summary: "DELETE courses/{courseId}/sections/{sectionId}/lessons/{lessonId}"
      operationId: "deleteLesson"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "sectionId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "lessonId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Void"
  /courses:
    post:
      summary: "POST courses"
      operationId: "createCourse"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CourseDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "integer"
                format: "int64"
    get:
      summary: "GET courses"
      operationId: "getAllCourses"
      parameters:
        - name: "published"
          in: "query"
          required: false
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Course"
  /courses/{courseId}/restore:
    post:
      summary: "POST courses/{courseId}/restore"
      operationId: "restoreCourse"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Void"
  /courses/{courseId}/requests:
    post:
      summary: "POST courses/{courseId}/requests"
      operationId: "requestPublish"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CourseRequestDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Course"
  /courses/{courseId}/sections:
    post:
      summary: "POST courses/{courseId}/sections"
      operationId: "addSection"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CourseSectionDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "integer"
                format: "int64"
  /courses/{courseId}/sections/{sectionId}/lessons:
    post:
      summary: "POST courses/{courseId}/sections/{sectionId}/lessons"
      operationId: "addLesson"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "sectionId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LessonDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "integer"
                format: "int64"
  /courses/{courseId}/reviews:
    post:
      summary: "POST courses/{courseId}/reviews"
      operationId: "addReview"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "enrollmentId"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReviewDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "integer"
                format: "int64"
  /courses/trash:
    get:
      summary: "GET courses/trash"
      operationId: "getTrashedCourses"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CourseInTrashDTO"
  /salaries:
    get:
      summary: "GET salaries"
      operationId: "getSalaries"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SalaryDTO"
  /salaries/{teacher}:
    get:
      summary: "GET salaries/{teacher}"
      operationId: "getSalaryDetail"
      parameters:
        - name: "teacher"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Salary"
  /payments:
    post:
      summary: "POST payments"
      operationId: "payment"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentRequest"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Payment"
  /payments/orders/{orderId}:
    get:
      summary: "GET payments/orders/{orderId}"
      operationId: "getPaymentByMyOrderId"
      parameters:
        - name: "orderId"
          in: "path"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Payment"
  /discounts/{id}:
    put:
      summary: "PUT discounts/{id}"
      operationId: "updateDiscount"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DiscountDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Discount"
    delete:
      summary: "DELETE discounts/{id}"
      operationId: "deleteDiscount"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "force"
          in: "query"
          required: false
          schema:
            type: "boolean"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Void"
    get:
      summary: "GET discounts/{id}"
      operationId: "getDiscountById"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Discount"
  /discounts:
    post:
      summary: "POST discounts"
      operationId: "createDiscount"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DiscountDTO"
        required: true
      responses:
        "201":
          description: "Created"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Discount"
    get:
      summary: "GET discounts"
      operationId: "getAllDiscounts"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Discount"
  /discounts/{id}/restore:
    post:
      summary: "POST discounts/{id}/restore"
      operationId: "restoreDiscount"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Void"
  /discounts/code/{code}:
    get:
      summary: "GET discounts/code/{code}"
      operationId: "searchDiscountByCode"
      parameters:
        - name: "code"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "originalPrice"
          in: "query"
          required: true
          schema:
            $ref: "#/components/schemas/MonetaryAmount"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/DiscountSearchDTO"
  /discounts/trash:
    get:
      summary: "GET discounts/trash"
      operationId: "getDeletedDiscounts"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Discount"
  /enrollments/{enrollmentId}/mark-lesson:
    put:
      summary: "PUT enrollments/{enrollmentId}/mark-lesson"
      operationId: "markLessonAsCompleted"
      parameters:
        - name: "enrollmentId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LessonMarkRequest"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Void"
  /enrollments/{enrollmentId}/change-course:
    put:
      summary: "PUT enrollments/{enrollmentId}/change-course"
      operationId: "changeCourse"
      parameters:
        - name: "enrollmentId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "courseId"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ChangeCourseResponse"
  /enrollments/{enrollmentId}/submit-quiz:
    post:
      summary: "POST enrollments/{enrollmentId}/submit-quiz"
      operationId: "submitQuiz"
      parameters:
        - name: "enrollmentId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuizSubmitDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "integer"
                format: "int64"
  /enrollments/{enrollmentId}/quizzes/{quizSubmissionId}/submission:
    delete:
      summary: "DELETE enrollments/{enrollmentId}/quizzes/{quizSubmissionId}/submission"
      operationId: "deleteQuizSubmission"
      parameters:
        - name: "enrollmentId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "quizSubmissionId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Void"
    get:
      summary: "GET enrollments/{enrollmentId}/quizzes/{quizSubmissionId}/submission"
      operationId: "getQuizSubmission"
      parameters:
        - name: "enrollmentId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "quizSubmissionId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/QuizSubmission"
  /enrollments:
    get:
      summary: "GET enrollments"
      operationId: "getAllEnrollments"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CourseEnrollmentDTO"
  /enrollments/count:
    get:
      summary: "GET enrollments/count"
      operationId: "countEnrollmentsByCourseId"
      parameters:
        - name: "courseId"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "integer"
                format: "int32"
  /enrollments/course/{courseId}:
    get:
      summary: "GET enrollments/course/{courseId}"
      operationId: "getEnrollmentByCourseId"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Enrollment"
  /enrollments/{enrollmentId}/content:
    get:
      summary: "GET enrollments/{enrollmentId}/content"
      operationId: "getContentByEnrollmentId"
      parameters:
        - name: "enrollmentId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/EnrollmentWithCourseDTO"
  /enrollments/{enrollmentId}/quizzes/{quizId}:
    get:
      summary: "GET enrollments/{enrollmentId}/quizzes/{quizId}"
      operationId: "getQuiz"
      parameters:
        - name: "enrollmentId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "quizId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/QuizDetailDTO"
  /enrollments/{enrollmentId}/is-submitted-quiz:
    get:
      summary: "GET enrollments/{enrollmentId}/is-submitted-quiz"
      operationId: "isSubmittedQuiz"
      parameters:
        - name: "enrollmentId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "quizId"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "boolean"
  /enrollments/purchased-courses:
    get:
      summary: "GET enrollments/purchased-courses"
      operationId: "purchasedCourses"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  type: "integer"
                  format: "int64"
  /enrollments/statistics:
    get:
      summary: "GET enrollments/statistics"
      operationId: "minInfoWithEnrollmentStatistic"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CourseInfoWithEnrollmentStatisticDTO"
  /enrollments/statistics/{courseId}:
    get:
      summary: "GET enrollments/statistics/{courseId}"
      operationId: "courseWithEnrollmentStatistic"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CourseInfoWithEnrollmentsDTO"
  /course-paths/{coursePathId}:
    put:
      summary: "PUT course-paths/{coursePathId}"
      operationId: "updateCoursePath"
      parameters:
        - name: "coursePathId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CoursePathDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Void"
    delete:
      summary: "DELETE course-paths/{coursePathId}"
      operationId: "deleteCoursePath"
      parameters:
        - name: "coursePathId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "force"
          in: "query"
          required: false
          schema:
            type: "boolean"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Void"
    get:
      summary: "GET course-paths/{coursePathId}"
      operationId: "getCoursePath"
      parameters:
        - name: "coursePathId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CoursePath"
  /course-paths:
    post:
      summary: "POST course-paths"
      operationId: "createCoursePath"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CoursePathDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "integer"
                format: "int64"
    get:
      summary: "GET course-paths"
      operationId: "getCoursePaths"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CoursePath"
  /course-paths/{coursePathId}/restore:
    post:
      summary: "POST course-paths/{coursePathId}/restore"
      operationId: "restoreCoursePath"
      parameters:
        - name: "coursePathId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Void"
  /course-paths/{coursePathId}/courseOrders:
    post:
      summary: "POST course-paths/{coursePathId}/courseOrders"
      operationId: "addCourseOrder"
      parameters:
        - name: "coursePathId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CourseOrderDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "integer"
                format: "int64"
  /course-paths/{coursePathId}/publish:
    post:
      summary: "POST course-paths/{coursePathId}/publish"
      operationId: "publishCoursePath"
      parameters:
        - name: "coursePathId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Void"
  /course-paths/{coursePathId}/unpublish:
    post:
      summary: "POST course-paths/{coursePathId}/unpublish"
      operationId: "unpublishCoursePath"
      parameters:
        - name: "coursePathId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Void"
  /course-paths/{coursePathId}/courseOrders/{courseOrderId}:
    delete:
      summary: "DELETE course-paths/{coursePathId}/courseOrders/{courseOrderId}"
      operationId: "removeCourseOrder"
      parameters:
        - name: "coursePathId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "courseOrderId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Void"
  /course-paths/trash:
    get:
      summary: "GET course-paths/trash"
      operationId: "getTrashedCoursePaths"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CoursePathInTrashDTO"
  /course-paths-published:
    get:
      summary: "GET course-paths-published"
      operationId: "getPublishedCoursePaths"
      parameters:
        - name: "courseId"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CoursePathPublishedDto"
  /course-paths-published/{coursePathId}:
    get:
      summary: "GET course-paths-published/{coursePathId}"
      operationId: "getPublishedCoursePathById"
      parameters:
        - name: "coursePathId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CoursePathPublishedDto"
components:
  schemas:
    OrderItemDTO:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
    OrderRequestDTO:
      type: "object"
      properties:
        items:
          type: "array"
          items:
            $ref: "#/components/schemas/OrderItemDTO"
        discountCode:
          type: "string"
    MonetaryAmount:
      type: "object"
      properties: { }
    OrderItem:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        course:
          type: "integer"
          format: "int64"
        price:
          $ref: "#/components/schemas/MonetaryAmount"
    ExchangeDetails:
      type: "object"
      properties:
        enrollmentId:
          type: "integer"
          format: "int64"
        courseId:
          type: "integer"
          format: "int64"
        additionalPrice:
          $ref: "#/components/schemas/MonetaryAmount"
    Order:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
        items:
          type: "array"
          items:
            $ref: "#/components/schemas/OrderItem"
        orderDate:
          type: "string"
          format: "date-time"
        totalPrice:
          $ref: "#/components/schemas/MonetaryAmount"
        discountedPrice:
          $ref: "#/components/schemas/MonetaryAmount"
        discountCode:
          type: "string"
        status:
          type: "string"
          enum:
            - "PENDING"
            - "PAID"
            - "CANCELLED"
        orderType:
          type: "string"
          enum:
            - "PURCHASE"
            - "EXCHANGE"
        exchangeDetails:
          $ref: "#/components/schemas/ExchangeDetails"
        createdBy:
          type: "string"
        createdDate:
          type: "string"
          format: "date-time"
        lastModifiedBy:
          type: "string"
        lastModifiedDate:
          type: "string"
          format: "date-time"
    UserLoginInfo:
      type: "object"
      properties:
        username:
          type: "string"
        email:
          type: "string"
        roles:
          type: "array"
          items:
            type: "string"
        exp:
          type: "integer"
          format: "int64"
    UserInfo:
      type: "object"
      properties:
        firstName:
          type: "string"
        lastName:
          type: "string"
        username:
          type: "string"
    UploadResponse:
      type: "object"
      properties:
        url:
          type: "string"
        message:
          type: "string"
    UploadDTO:
      type: "object"
      properties:
        urls:
          type: "array"
          items:
            type: "string"
    Review:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        username:
          type: "string"
        rating:
          type: "integer"
          format: "int32"
        comment:
          type: "string"
        reviewDate:
          type: "string"
          format: "date-time"
    PublishedCourseDTO:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        title:
          type: "string"
        thumbnailUrl:
          type: "string"
        description:
          type: "string"
        language:
          type: "string"
          enum:
            - "ENGLISH"
            - "VIETNAMESE"
            - "JAPANESE"
            - "KOREAN"
            - "CHINESE"
            - "FRENCH"
            - "GERMAN"
            - "SPANISH"
        subtitles:
          type: "array"
          items:
            type: "string"
            enum:
              - "ENGLISH"
              - "VIETNAMESE"
              - "JAPANESE"
              - "KOREAN"
              - "CHINESE"
              - "FRENCH"
              - "GERMAN"
              - "SPANISH"
        benefits:
          type: "array"
          items:
            type: "string"
        prerequisites:
          type: "array"
          items:
            type: "string"
        price:
          $ref: "#/components/schemas/MonetaryAmount"
        teacher:
          type: "string"
        reviews:
          type: "array"
          items:
            $ref: "#/components/schemas/Review"
        averageRating:
          type: "number"
          format: "double"
    CoursePostDTO:
      type: "object"
      properties:
        content:
          type: "string"
        attachmentUrls:
          type: "array"
          items:
            type: "string"
    Void:
      type: "object"
      properties: { }
    CommentDTO:
      type: "object"
      properties:
        content:
          type: "string"
        attachmentUrls:
          type: "array"
          items:
            type: "string"
    Comment:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        content:
          type: "string"
        info:
          $ref: "#/components/schemas/UserInfo"
        attachmentUrls:
          type: "array"
          items:
            type: "string"
        createdDate:
          type: "string"
          format: "date-time"
        lastModifiedDate:
          type: "string"
          format: "date-time"
    Emotion:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        username:
          type: "string"
        createdDate:
          type: "string"
          format: "date-time"
    Post:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        content:
          type: "string"
        info:
          $ref: "#/components/schemas/UserInfo"
        attachmentUrls:
          type: "array"
          items:
            type: "string"
        comments:
          type: "array"
          items:
            $ref: "#/components/schemas/Comment"
        emotions:
          type: "array"
          items:
            $ref: "#/components/schemas/Emotion"
        createdDate:
          type: "string"
          format: "date-time"
        lastModifiedDate:
          type: "string"
          format: "date-time"
        deleted:
          type: "boolean"
    PostInTrashDTO:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        content:
          type: "string"
        username:
          type: "string"
        createdDate:
          type: "string"
          format: "date-time"
    QuizUpdateDTO:
      type: "object"
      properties:
        title:
          type: "string"
        description:
          type: "string"
        passScorePercentage:
          type: "integer"
          format: "int32"
    AnswerOptionDTO:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        content:
          type: "string"
    QuestionDTO:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        content:
          type: "string"
        type:
          type: "string"
        options:
          type: "array"
          items:
            $ref: "#/components/schemas/AnswerOptionDTO"
        trueFalseAnswer:
          type: "boolean"
        score:
          type: "integer"
          format: "int32"
    QuizDTO:
      type: "object"
      properties:
        title:
          type: "string"
        description:
          type: "string"
        afterLessonId:
          type: "integer"
          format: "int64"
        passScorePercentage:
          type: "integer"
          format: "int32"
    AnswerOption:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        content:
          type: "string"
        correct:
          type: "boolean"
    Question:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        content:
          type: "string"
        type:
          type: "string"
          enum:
            - "MULTIPLE_CHOICE"
            - "SINGLE_CHOICE"
            - "TRUE_FALSE"
        options:
          type: "array"
          items:
            $ref: "#/components/schemas/AnswerOption"
        trueFalseAnswer:
          type: "boolean"
        score:
          type: "integer"
          format: "int32"
    Quiz:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        title:
          type: "string"
        description:
          type: "string"
        afterLessonId:
          type: "integer"
          format: "int64"
        questions:
          type: "array"
          items:
            $ref: "#/components/schemas/Question"
        totalScore:
          type: "integer"
          format: "int32"
        passScorePercentage:
          type: "integer"
          format: "int32"
        deleted:
          type: "boolean"
    QuizInTrashDTO:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        title:
          type: "string"
        description:
          type: "string"
        afterLessonId:
          type: "integer"
          format: "int64"
    CountDataDTO:
      type: "object"
      properties:
        teacher:
          type: "string"
        numberOfCourses:
          type: "integer"
          format: "int32"
        numberOfStudents:
          type: "integer"
          format: "int32"
        numberOfCertificates:
          type: "integer"
          format: "int32"
        numberOfDraftCourses:
          type: "integer"
          format: "int32"
    TeacherDTO:
      type: "object"
      properties:
        info:
          $ref: "#/components/schemas/UserInfo"
        count:
          $ref: "#/components/schemas/CountDataDTO"
    MonthStats:
      type: "object"
      properties:
        month:
          type: "integer"
          format: "int32"
        count:
          type: "integer"
          format: "int32"
    StudentsByCourseDTO:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        title:
          type: "string"
        thumbnailUrl:
          type: "string"
        completedStudents:
          type: "integer"
          format: "int32"
        totalStudents:
          type: "integer"
          format: "int32"
    RatingMonthStats:
      type: "object"
      properties:
        month:
          type: "string"
        rating:
          type: "number"
          format: "double"
    TeacherStatisticsDTO:
      type: "object"
      properties:
        coursesByMonth:
          type: "array"
          items:
            $ref: "#/components/schemas/MonthStats"
        draftCoursesByMonth:
          type: "array"
          items:
            $ref: "#/components/schemas/MonthStats"
        studentsEnrolledByMonth:
          type: "array"
          items:
            $ref: "#/components/schemas/MonthStats"
        studentsByCourse:
          type: "array"
          items:
            $ref: "#/components/schemas/StudentsByCourseDTO"
        ratingOverallByMonth:
          type: "array"
          items:
            $ref: "#/components/schemas/RatingMonthStats"
    TeacherDetailDTO:
      type: "object"
      properties:
        info:
          $ref: "#/components/schemas/UserInfo"
        statistics:
          $ref: "#/components/schemas/TeacherStatisticsDTO"
    CourseUpdateDTO:
      type: "object"
      properties:
        title:
          type: "string"
        description:
          type: "string"
        thumbnailUrl:
          type: "string"
        benefits:
          type: "array"
          items:
            type: "string"
        prerequisites:
          type: "array"
          items:
            type: "string"
        subtitles:
          type: "array"
          items:
            type: "string"
            enum:
              - "ENGLISH"
              - "VIETNAMESE"
              - "JAPANESE"
              - "KOREAN"
              - "CHINESE"
              - "FRENCH"
              - "GERMAN"
              - "SPANISH"
    CourseRequestApproveDTO:
      type: "object"
      properties:
        approveType:
          type: "string"
          enum:
            - "PUBLISH"
            - "UNPUBLISH"
        approveMessage:
          type: "string"
        approveBy:
          type: "string"
    Lesson:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        title:
          type: "string"
        type:
          type: "string"
          enum:
            - "VIDEO"
            - "TEXT"
            - "QUIZ"
            - "ASSIGNMENT"
        link:
          type: "string"
        orderIndex:
          type: "integer"
          format: "int32"
    CourseSection:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        title:
          type: "string"
        lessons:
          type: "array"
          items:
            $ref: "#/components/schemas/Lesson"
        quizzes:
          type: "array"
          items:
            $ref: "#/components/schemas/Quiz"
        orderIndex:
          type: "integer"
          format: "int32"
        published:
          type: "boolean"
    CourseRequest:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        type:
          type: "string"
          enum:
            - "PUBLISH"
            - "UNPUBLISH"
        status:
          type: "string"
          enum:
            - "PENDING"
            - "APPROVED"
            - "REJECTED"
        resolved:
          type: "boolean"
        resolvedBy:
          type: "string"
        requestedBy:
          type: "string"
        message:
          type: "string"
        rejectReason:
          type: "string"
        approveMessage:
          type: "string"
        requestedDate:
          type: "string"
          format: "date-time"
        resolvedDate:
          type: "string"
          format: "date-time"
    Course:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        title:
          type: "string"
        thumbnailUrl:
          type: "string"
        description:
          type: "string"
        language:
          type: "string"
          enum:
            - "ENGLISH"
            - "VIETNAMESE"
            - "JAPANESE"
            - "KOREAN"
            - "CHINESE"
            - "FRENCH"
            - "GERMAN"
            - "SPANISH"
        subtitles:
          type: "array"
          items:
            type: "string"
            enum:
              - "ENGLISH"
              - "VIETNAMESE"
              - "JAPANESE"
              - "KOREAN"
              - "CHINESE"
              - "FRENCH"
              - "GERMAN"
              - "SPANISH"
        benefits:
          type: "array"
          items:
            type: "string"
        prerequisites:
          type: "array"
          items:
            type: "string"
        sections:
          type: "array"
          items:
            $ref: "#/components/schemas/CourseSection"
        price:
          $ref: "#/components/schemas/MonetaryAmount"
        published:
          type: "boolean"
        publishedDate:
          type: "string"
          format: "date-time"
        unpublished:
          type: "boolean"
        unpublishedDate:
          type: "string"
          format: "date-time"
        teacher:
          type: "string"
        approvedBy:
          type: "string"
        courseRequests:
          type: "array"
          items:
            $ref: "#/components/schemas/CourseRequest"
        posts:
          type: "array"
          items:
            $ref: "#/components/schemas/Post"
        reviews:
          type: "array"
          items:
            $ref: "#/components/schemas/Review"
        version:
          type: "integer"
          format: "int32"
        createdBy:
          type: "string"
        createdDate:
          type: "string"
          format: "date-time"
        lastModifiedBy:
          type: "string"
        lastModifiedDate:
          type: "string"
          format: "date-time"
    CourseRequestRejectDTO:
      type: "object"
      properties:
        rejectType:
          type: "string"
          enum:
            - "PUBLISH"
            - "UNPUBLISH"
        rejectCause:
          type: "string"
        rejectBy:
          type: "string"
    UpdatePriceDTO:
      type: "object"
      properties:
        price:
          $ref: "#/components/schemas/MonetaryAmount"
    AssignTeacherDTO:
      type: "object"
      properties:
        teacher:
          type: "string"
    UpdateSectionDTO:
      type: "object"
      properties:
        title:
          type: "string"
    LessonDTO:
      type: "object"
      properties:
        title:
          type: "string"
        type:
          type: "string"
          enum:
            - "VIDEO"
            - "TEXT"
            - "QUIZ"
            - "ASSIGNMENT"
        link:
          type: "string"
    CourseDTO:
      type: "object"
      properties:
        title:
          type: "string"
        description:
          type: "string"
        thumbnailUrl:
          type: "string"
        benefits:
          type: "array"
          items:
            type: "string"
        language:
          type: "string"
          enum:
            - "ENGLISH"
            - "VIETNAMESE"
            - "JAPANESE"
            - "KOREAN"
            - "CHINESE"
            - "FRENCH"
            - "GERMAN"
            - "SPANISH"
        prerequisites:
          type: "array"
          items:
            type: "string"
        subtitles:
          type: "array"
          items:
            type: "string"
            enum:
              - "ENGLISH"
              - "VIETNAMESE"
              - "JAPANESE"
              - "KOREAN"
              - "CHINESE"
              - "FRENCH"
              - "GERMAN"
              - "SPANISH"
    CourseRequestDTO:
      type: "object"
      properties:
        type:
          type: "string"
          enum:
            - "PUBLISH"
            - "UNPUBLISH"
        message:
          type: "string"
        requestedBy:
          type: "string"
    CourseSectionDTO:
      type: "object"
      properties:
        title:
          type: "string"
    ReviewDTO:
      type: "object"
      properties:
        rating:
          type: "integer"
          format: "int32"
        comment:
          type: "string"
    CourseInTrashDTO:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        title:
          type: "string"
        thumbnailUrl:
          type: "string"
        description:
          type: "string"
        teacher:
          type: "string"
        language:
          type: "string"
          enum:
            - "ENGLISH"
            - "VIETNAMESE"
            - "JAPANESE"
            - "KOREAN"
            - "CHINESE"
            - "FRENCH"
            - "GERMAN"
            - "SPANISH"
    SalaryDTO:
      type: "object"
      properties: { }
    Bonus:
      type: "object"
      properties:
        type:
          type: "string"
          enum:
            - "NUMBER_OF_STUDENTS"
            - "NUMBER_OF_COURSES"
            - "ALL"
        price:
          $ref: "#/components/schemas/MonetaryAmount"
    SalaryRecord:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        bonus:
          $ref: "#/components/schemas/Bonus"
        createdDate:
          type: "string"
          format: "date-time"
        paidDate:
          type: "string"
          format: "date-time"
        nocByMonth:
          type: "integer"
          format: "int32"
        nosByMonth:
          type: "integer"
          format: "int32"
        totalPrice:
          type: "integer"
          format: "int32"
        status:
          type: "string"
          enum:
            - "PENDING"
            - "PAID"
            - "FAILED"
        failureReason:
          type: "string"
    Salary:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        teacher:
          type: "string"
        rank:
          type: "string"
          enum:
            - "NONE"
            - "INSTRUCTOR_I"
            - "INSTRUCTOR_II"
            - "INSTRUCTOR_III"
        baseSalary:
          $ref: "#/components/schemas/MonetaryAmount"
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/SalaryRecord"
        nosAllTime:
          type: "integer"
          format: "int32"
        nocAllTime:
          type: "integer"
          format: "int32"
        createdBy:
          type: "string"
        createdDate:
          type: "string"
          format: "date-time"
        lastModifiedBy:
          type: "string"
        lastModifiedDate:
          type: "string"
          format: "date-time"
    PaymentRequest:
      type: "object"
      properties:
        orderId:
          type: "string"
          format: "uuid"
        price:
          $ref: "#/components/schemas/MonetaryAmount"
        paymentMethod:
          type: "string"
          enum:
            - "PAYPAL"
            - "STRIPE"
        token:
          type: "string"
    Payment:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
        orderId:
          type: "string"
          format: "uuid"
        price:
          $ref: "#/components/schemas/MonetaryAmount"
        status:
          type: "string"
          enum:
            - "PENDING"
            - "PAID"
            - "FAILED"
        paymentDate:
          type: "string"
          format: "date-time"
        paymentMethod:
          type: "string"
          enum:
            - "PAYPAL"
            - "STRIPE"
        transactionId:
          type: "string"
        receiptUrl:
          type: "string"
        failureReason:
          type: "string"
    DiscountDTO:
      type: "object"
      properties:
        code:
          type: "string"
        type:
          type: "string"
          enum:
            - "PERCENTAGE"
            - "FIXED"
        percentage:
          type: "number"
          format: "double"
        maxValue:
          $ref: "#/components/schemas/MonetaryAmount"
        fixedPrice:
          $ref: "#/components/schemas/MonetaryAmount"
        startDate:
          type: "string"
          format: "date-time"
        endDate:
          type: "string"
          format: "date-time"
        maxUsage:
          type: "integer"
          format: "int32"
    Discount:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        code:
          type: "string"
        type:
          type: "string"
          enum:
            - "PERCENTAGE"
            - "FIXED"
        percentage:
          type: "number"
          format: "double"
        maxValue:
          $ref: "#/components/schemas/MonetaryAmount"
        fixedPrice:
          $ref: "#/components/schemas/MonetaryAmount"
        startDate:
          type: "string"
          format: "date-time"
        endDate:
          type: "string"
          format: "date-time"
        currentUsage:
          type: "integer"
          format: "int32"
        maxUsage:
          type: "integer"
          format: "int32"
        createdBy:
          type: "string"
        createdDate:
          type: "string"
          format: "date-time"
        lastModifiedBy:
          type: "string"
        lastModifiedDate:
          type: "string"
          format: "date-time"
    DiscountSearchDTO:
      type: "object"
      properties:
        code:
          type: "string"
        type:
          type: "string"
          enum:
            - "PERCENTAGE"
            - "FIXED"
        percentage:
          type: "number"
          format: "double"
        maxValue:
          $ref: "#/components/schemas/MonetaryAmount"
        fixedPrice:
          $ref: "#/components/schemas/MonetaryAmount"
        startDate:
          type: "string"
          format: "date-time"
        endDate:
          type: "string"
          format: "date-time"
        discountPrice:
          $ref: "#/components/schemas/MonetaryAmount"
    LessonMarkRequest:
      type: "object"
      properties:
        mark:
          type: "string"
          enum:
            - "COMPLETED"
            - "INCOMPLETE"
        courseId:
          type: "integer"
          format: "int64"
        lessonId:
          type: "integer"
          format: "int64"
    ChangeCourseResponse:
      type: "object"
      properties:
        orderId:
          type: "string"
          format: "uuid"
        type:
          type: "string"
          enum:
            - "BASIC_CHANGE"
            - "PENDING_PAYMENT_ADDITIONAL"
        status:
          type: "string"
          enum:
            - "SUCCESS"
            - "FAILED"
            - "PENDING"
        priceAdditional:
          $ref: "#/components/schemas/MonetaryAmount"
    QuestionSubmitDTO:
      type: "object"
      properties:
        type:
          type: "string"
          enum:
            - "MULTIPLE_CHOICE"
            - "SINGLE_CHOICE"
            - "TRUE_FALSE"
        questionId:
          type: "integer"
          format: "int64"
        answerOptionIds:
          type: "array"
          items:
            type: "integer"
            format: "int64"
        trueFalseAnswer:
          type: "boolean"
        singleChoiceAnswer:
          type: "integer"
          format: "int64"
    QuizSubmitDTO:
      type: "object"
      properties:
        quizId:
          type: "integer"
          format: "int64"
        questions:
          type: "array"
          items:
            $ref: "#/components/schemas/QuestionSubmitDTO"
    CourseEnrollmentDTO:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        student:
          type: "string"
        courseId:
          type: "integer"
          format: "int64"
        title:
          type: "string"
        thumbnailUrl:
          type: "string"
        teacher:
          type: "string"
        enrollmentDate:
          type: "string"
          format: "date-time"
        completed:
          type: "boolean"
    LessonProgress:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        lessonId:
          type: "integer"
          format: "int64"
        lessonTitle:
          type: "string"
        bonus:
          type: "boolean"
        completed:
          type: "boolean"
        orderIndex:
          type: "integer"
          format: "int32"
        completedDate:
          type: "string"
          format: "date-time"
        inProgress:
          type: "boolean"
    Certificate:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
        fullName:
          type: "string"
        email:
          type: "string"
        student:
          type: "string"
        teacher:
          type: "string"
        url:
          type: "string"
        courseId:
          type: "integer"
          format: "int64"
        courseTitle:
          type: "string"
        issuedDate:
          type: "string"
          format: "date-time"
        certified:
          type: "boolean"
    QuizAnswer:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        questionId:
          type: "integer"
          format: "int64"
        answerOptionIds:
          type: "array"
          items:
            type: "integer"
            format: "int64"
        trueFalseAnswer:
          type: "boolean"
        singleChoiceAnswer:
          type: "integer"
          format: "int64"
        type:
          type: "string"
          enum:
            - "MULTIPLE_CHOICE"
            - "SINGLE_CHOICE"
            - "TRUE_FALSE"
    Instant:
      type: "object"
      properties: { }
    QuizSubmission:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        quizId:
          type: "integer"
          format: "int64"
        afterLessonId:
          type: "integer"
          format: "int64"
        bonus:
          type: "boolean"
        answers:
          type: "array"
          items:
            $ref: "#/components/schemas/QuizAnswer"
        score:
          type: "integer"
          format: "int32"
        submittedDate:
          $ref: "#/components/schemas/Instant"
        lastModifiedDate:
          $ref: "#/components/schemas/Instant"
        passed:
          type: "boolean"
    Enrollment:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        student:
          type: "string"
        courseId:
          type: "integer"
          format: "int64"
        teacher:
          type: "string"
        quizIds:
          type: "array"
          items:
            type: "integer"
            format: "int64"
        totalLessons:
          type: "integer"
          format: "int32"
        enrollmentDate:
          type: "string"
          format: "date-time"
        lessonProgresses:
          type: "array"
          items:
            $ref: "#/components/schemas/LessonProgress"
        completed:
          type: "boolean"
        reviewed:
          type: "boolean"
        completedDate:
          type: "string"
          format: "date-time"
        certificate:
          $ref: "#/components/schemas/Certificate"
        quizSubmissions:
          type: "array"
          items:
            $ref: "#/components/schemas/QuizSubmission"
        changedCourse:
          type: "boolean"
        createdBy:
          type: "string"
        createdDate:
          type: "string"
          format: "date-time"
        lastModifiedBy:
          type: "string"
        lastModifiedDate:
          type: "string"
          format: "date-time"
    Progress:
      type: "object"
      properties:
        totalLessons:
          type: "integer"
          format: "int32"
        completedLessons:
          type: "integer"
          format: "int32"
        totalQuizzes:
          type: "integer"
          format: "int32"
        passedQuizzes:
          type: "integer"
          format: "int32"
        totalLessonBonus:
          type: "integer"
          format: "int32"
        totalQuizBonus:
          type: "integer"
          format: "int32"
        progressPercentage:
          type: "number"
          format: "double"
    EnrollmentWithCourseDTO:
      type: "object"
      properties:
        courseId:
          type: "integer"
          format: "int64"
        title:
          type: "string"
        thumbnailUrl:
          type: "string"
        description:
          type: "string"
        language:
          type: "string"
          enum:
            - "ENGLISH"
            - "VIETNAMESE"
            - "JAPANESE"
            - "KOREAN"
            - "CHINESE"
            - "FRENCH"
            - "GERMAN"
            - "SPANISH"
        subtitles:
          type: "array"
          items:
            type: "string"
            enum:
              - "ENGLISH"
              - "VIETNAMESE"
              - "JAPANESE"
              - "KOREAN"
              - "CHINESE"
              - "FRENCH"
              - "GERMAN"
              - "SPANISH"
        benefits:
          type: "array"
          items:
            type: "string"
        prerequisites:
          type: "array"
          items:
            type: "string"
        sections:
          type: "array"
          items:
            $ref: "#/components/schemas/CourseSection"
        teacher:
          type: "string"
        enrollmentId:
          type: "integer"
          format: "int64"
        student:
          type: "string"
        enrollmentDate:
          type: "string"
          format: "date-time"
        lessonProgresses:
          type: "array"
          items:
            $ref: "#/components/schemas/LessonProgress"
        completed:
          type: "boolean"
        reviewed:
          type: "boolean"
        completedDate:
          type: "string"
          format: "date-time"
        certificate:
          $ref: "#/components/schemas/Certificate"
        progress:
          $ref: "#/components/schemas/Progress"
        quizSubmissions:
          type: "array"
          items:
            $ref: "#/components/schemas/QuizSubmission"
    QuizDetailDTO:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        title:
          type: "string"
        description:
          type: "string"
        afterLessonId:
          type: "integer"
          format: "int64"
        questions:
          type: "array"
          items:
            $ref: "#/components/schemas/QuestionDTO"
        totalScore:
          type: "integer"
          format: "int32"
        passScorePercentage:
          type: "integer"
          format: "int32"
    CourseInfoWithEnrollmentStatisticDTO:
      type: "object"
      properties:
        courseId:
          type: "integer"
          format: "int64"
        title:
          type: "string"
        thumbnailUrl:
          type: "string"
        teacher:
          type: "string"
        totalEnrollments:
          type: "integer"
          format: "int64"
        totalCompletedEnrollments:
          type: "integer"
          format: "int64"
    CourseInfoWithEnrollmentsDTO:
      type: "object"
      properties:
        courseId:
          type: "integer"
          format: "int64"
        title:
          type: "string"
        thumbnailUrl:
          type: "string"
        teacher:
          type: "string"
        enrollments:
          type: "array"
          items:
            $ref: "#/components/schemas/Enrollment"
    CoursePathDTO:
      type: "object"
      properties:
        title:
          type: "string"
        description:
          type: "string"
    CourseOrderDTO:
      type: "object"
      properties:
        courseId:
          type: "integer"
          format: "int64"
    CoursePathInTrashDTO:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        title:
          type: "string"
        description:
          type: "string"
        teacher:
          type: "string"
    CourseOrder:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        courseId:
          type: "integer"
          format: "int64"
        orderIndex:
          type: "integer"
          format: "int32"
    CoursePath:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        title:
          type: "string"
        description:
          type: "string"
        courseOrders:
          type: "array"
          items:
            $ref: "#/components/schemas/CourseOrder"
        teacher:
          type: "string"
        published:
          type: "boolean"
        publishedDate:
          type: "string"
          format: "date-time"
        deleted:
          type: "boolean"
        version:
          type: "integer"
          format: "int32"
        createdBy:
          type: "string"
        createdDate:
          type: "string"
          format: "date-time"
        lastModifiedBy:
          type: "string"
        lastModifiedDate:
          type: "string"
          format: "date-time"
    CourseOrderPublishedDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        courseId:
          type: "integer"
          format: "int64"
        orderIndex:
          type: "integer"
          format: "int32"
        price:
          $ref: "#/components/schemas/MonetaryAmount"
        title:
          type: "string"
        purchaseCount:
          type: "integer"
          format: "int32"
    CoursePathPublishedDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        title:
          type: "string"
        description:
          type: "string"
        courseOrders:
          type: "array"
          items:
            $ref: "#/components/schemas/CourseOrderPublishedDto"
        teacher:
          type: "string"
        publishedDate:
          type: "string"
          format: "date-time"